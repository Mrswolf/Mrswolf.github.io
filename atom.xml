<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>swolf&#39;s blog</title>
  
  <subtitle>记录我的学习生活</subtitle>
  <link href="https://mrswolf.github.io/atom.xml" rel="self"/>
  
  <link href="https://mrswolf.github.io/"/>
  <updated>2024-01-11T12:31:00.494Z</updated>
  <id>https://mrswolf.github.io/</id>
  
  <author>
    <name>swolf</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Robust Principle Component Analysis</title>
    <link href="https://mrswolf.github.io/rpca/"/>
    <id>https://mrswolf.github.io/rpca/</id>
    <published>2023-09-12T15:30:49.000Z</published>
    <updated>2024-01-11T12:31:00.494Z</updated>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;
&lt;h2 id=&quot;Background-of-PCA&quot;&gt;Background of PCA&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Principle component analysis (PCA)&lt;/strong&gt; is the most widely use</summary>
      
    
    
    
    <category term="machine learning" scheme="https://mrswolf.github.io/categories/machine-learning/"/>
    
    
    <category term="machine learning" scheme="https://mrswolf.github.io/tags/machine-learning/"/>
    
    <category term="matrix decomposition" scheme="https://mrswolf.github.io/tags/matrix-decomposition/"/>
    
  </entry>
  
  <entry>
    <title>Scientific Computing in VS Code</title>
    <link href="https://mrswolf.github.io/vscode-python/"/>
    <id>https://mrswolf.github.io/vscode-python/</id>
    <published>2023-06-11T12:23:45.000Z</published>
    <updated>2023-09-19T16:00:00.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;p&gt;I used to do all scientific computing work on Jupyter notebooks. My most common way of debugging was print, which is definitely not the best way to do so.</summary>
    
    
    
    <category term="tools" scheme="https://mrswolf.github.io/categories/tools/"/>
    
    
    <category term="vscode" scheme="https://mrswolf.github.io/tags/vscode/"/>
    
    <category term="python" scheme="https://mrswolf.github.io/tags/python/"/>
    
    <category term="jupyter" scheme="https://mrswolf.github.io/tags/jupyter/"/>
    
  </entry>
  
  <entry>
    <title>Fourier Transform</title>
    <link href="https://mrswolf.github.io/fourier-transform/"/>
    <id>https://mrswolf.github.io/fourier-transform/</id>
    <published>2023-05-15T16:00:00.000Z</published>
    <updated>2023-09-12T15:45:56.083Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;p&gt;The Fourier transform decomposes a function into different frequency components, which can be summed to represent the original function.</summary>
    
    
    
    <category term="signal processing" scheme="https://mrswolf.github.io/categories/signal-processing/"/>
    
    
    <category term="machine learning" scheme="https://mrswolf.github.io/tags/machine-learning/"/>
    
    <category term="signal processing" scheme="https://mrswolf.github.io/tags/signal-processing/"/>
    
  </entry>
  
  <entry>
    <title>Makefile使用规则</title>
    <link href="https://mrswolf.github.io/learn-makefile/"/>
    <id>https://mrswolf.github.io/learn-makefile/</id>
    <published>2022-06-06T16:00:00.000Z</published>
    <updated>2023-09-12T15:45:36.009Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;p&gt;出于工作需要，我要开始系统学习c++了。目前我的主力台式机是Linux系统，最常用的编辑器是VS Code，所以想要得到一个比较完整的C/C++工程方案，似乎学习Makefile的相关规则是必不可少的。</summary>
    
    
    
    <category term="program" scheme="https://mrswolf.github.io/categories/program/"/>
    
    
    <category term="c++" scheme="https://mrswolf.github.io/tags/c/"/>
    
    <category term="linux" scheme="https://mrswolf.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>为什么要少用逆矩阵</title>
    <link href="https://mrswolf.github.io/why-not-invert-that-matrix/"/>
    <id>https://mrswolf.github.io/why-not-invert-that-matrix/</id>
    <published>2022-05-29T16:00:00.000Z</published>
    <updated>2022-06-01T16:00:00.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;p&gt;我经常会在线性代数教材以及论坛讨论中看到不建议使用逆矩阵&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mi mathvariant=&quot;bold&quot;&gt;A&lt;/mi&gt;&lt;mrow&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\mathbf{A}^{-1}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathbf&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;来求解线性方程&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi mathvariant=&quot;bold&quot;&gt;A&lt;/mi&gt;&lt;mi mathvariant=&quot;bold&quot;&gt;x&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi mathvariant=&quot;bold&quot;&gt;b&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\mathbf{A}\mathbf{x}=\mathbf{b}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6861em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathbf&quot;&gt;Ax&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathbf&quot;&gt;b&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，尽管我一直遵循这样的原则（实践中逆矩阵确实不够稳定），但仍然不明白不使用逆矩阵的理由。本文总结了我在网上看到的一些关于逆矩阵的讨论，希望能解释为什么要少用逆矩阵来求解线性方程。&lt;/p&gt;</summary>
    
    
    
    <category term="machine learning" scheme="https://mrswolf.github.io/categories/machine-learning/"/>
    
    
    <category term="machine learning" scheme="https://mrswolf.github.io/tags/machine-learning/"/>
    
    <category term="matrix decomposition" scheme="https://mrswolf.github.io/tags/matrix-decomposition/"/>
    
  </entry>
  
  <entry>
    <title>矩阵微积分</title>
    <link href="https://mrswolf.github.io/matrix-calculus/"/>
    <id>https://mrswolf.github.io/matrix-calculus/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-30T16:00:00.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;p&gt;矩阵微分和矩阵求导几乎是求解优化问题不可避免的必学内容，这一方面的内容老实说我很难完全掌握。这里记录一下一些常用的矩阵微分求导的规范和技巧。</summary>
    
    
    
    <category term="machine learning" scheme="https://mrswolf.github.io/categories/machine-learning/"/>
    
    
    <category term="machine learning" scheme="https://mrswolf.github.io/tags/machine-learning/"/>
    
    <category term="matrix decomposition" scheme="https://mrswolf.github.io/tags/matrix-decomposition/"/>
    
    <category term="deep learning" scheme="https://mrswolf.github.io/tags/deep-learning/"/>
    
  </entry>
  
  <entry>
    <title>主成分分析PCA</title>
    <link href="https://mrswolf.github.io/principle-component-analysis/"/>
    <id>https://mrswolf.github.io/principle-component-analysis/</id>
    <published>2019-12-10T16:00:00.000Z</published>
    <updated>2022-03-20T16:00:00.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;p&gt;主成分分析（Principle Component Analysis，PCA）是常用的一种矩阵分解算法，PCA通过旋转原始空间来使得数据在各个正交轴上的投影最大，通过选择前几个正交轴可以实现数据降维的目的。</summary>
    
    
    
    <category term="machine learning" scheme="https://mrswolf.github.io/categories/machine-learning/"/>
    
    
    <category term="machine learning" scheme="https://mrswolf.github.io/tags/machine-learning/"/>
    
    <category term="matrix decomposition" scheme="https://mrswolf.github.io/tags/matrix-decomposition/"/>
    
  </entry>
  
  <entry>
    <title>manjaro踩坑记(2022更新版)</title>
    <link href="https://mrswolf.github.io/my-manjaro-log/"/>
    <id>https://mrswolf.github.io/my-manjaro-log/</id>
    <published>2019-05-23T16:00:00.000Z</published>
    <updated>2022-03-20T16:00:00.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;p&gt;从2019年到2022年，manjaro发行版渡过了我的整个博士生涯。最近毕业重新装了系统，依然选择了最新的&lt;a href=&quot;https://manjaro.org/downloads/official/kde/&quot;&gt;manjaro KDE Plasma 21.2.4&lt;/a&gt;（本来装了arch，大小问题不断被劝退了😜）。基本上这台linux主机要跟着我进入人生下一阶段，作为主力台式机也不打算再折腾了。安装过程中有一些新的学习体会（坑），在这里更新记录一下，希望能帮到有需要的朋友～</summary>
    
    
    
    <category term="linux" scheme="https://mrswolf.github.io/categories/linux/"/>
    
    
    <category term="linux" scheme="https://mrswolf.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>MATLAB分布式集群搭建记录</title>
    <link href="https://mrswolf.github.io/matlab-mdce-log/"/>
    <id>https://mrswolf.github.io/matlab-mdce-log/</id>
    <published>2019-05-19T16:00:00.000Z</published>
    <updated>2022-03-20T16:00:00.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;p&gt;&lt;strong&gt;本篇的内容可能过时啦&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;虽然我很久不用MATLAB处理日常工作，但是实验室主流依然是MATLAB（用Python的就那么几个T_T)。以前小伙伴们跑程序都是拷贝程序和数据到实验室的计算服务器上，手工开N个MATLAB窗口做运算。现在实验室规模扩大，这种手工的方式越来越繁琐。我从前用MATLAB时就想试试集群计算，奈何当时实验室没啥硬件条件，正好现在有机会，我干脆搭了个MATLAB集群供小伙伴使用。</summary>
    
    
    
    <category term="distributed computing" scheme="https://mrswolf.github.io/categories/distributed-computing/"/>
    
    
    <category term="matlab" scheme="https://mrswolf.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>Psychopy事件响应</title>
    <link href="https://mrswolf.github.io/psychopy-event/"/>
    <id>https://mrswolf.github.io/psychopy-event/</id>
    <published>2019-01-08T09:01:30.000Z</published>
    <updated>2022-06-04T06:56:24.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;h2 id=&quot;Psychopy事件响应&quot;&gt;Psychopy事件响应&lt;/h2&gt;
&lt;p&gt;Psychopy提供了很多IO交互方式，当然，最根本的还是键盘和鼠标。本节介绍Psychopy鼠标和键盘的编程技巧。</summary>
    
    
    
    <category term="psychopy系列" scheme="https://mrswolf.github.io/categories/psychopy%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="psychopy" scheme="https://mrswolf.github.io/tags/psychopy/"/>
    
  </entry>
  
  <entry>
    <title>共空间模式CSP</title>
    <link href="https://mrswolf.github.io/common-spatial-pattern/"/>
    <id>https://mrswolf.github.io/common-spatial-pattern/</id>
    <published>2019-01-05T16:00:00.000Z</published>
    <updated>2022-03-23T16:00:00.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;p&gt;共空间模式（common spatial pattern，CSP）是脑-机接口领域常用的一类空间滤波算法，尤其在运动想象范式分类上具有较好的效果，是运动想象范式的基准算法之一。</summary>
    
    
    
    <category term="brain-computer interface" scheme="https://mrswolf.github.io/categories/brain-computer-interface/"/>
    
    
    <category term="machine learning" scheme="https://mrswolf.github.io/tags/machine-learning/"/>
    
    <category term="matrix decomposition" scheme="https://mrswolf.github.io/tags/matrix-decomposition/"/>
    
    <category term="brain-computer interface" scheme="https://mrswolf.github.io/tags/brain-computer-interface/"/>
    
  </entry>
  
  <entry>
    <title>如何在Psychopy中新建窗口</title>
    <link href="https://mrswolf.github.io/psychopy-window/"/>
    <id>https://mrswolf.github.io/psychopy-window/</id>
    <published>2018-11-16T13:15:22.000Z</published>
    <updated>2022-06-04T06:59:14.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;h2 id=&quot;新建单窗口&quot;&gt;新建单窗口&lt;/h2&gt;
&lt;p&gt;窗口(windows)是刺激呈现的舞台，任何刺激对象都需要指定其所属的窗口对象。</summary>
    
    
    
    <category term="psychopy系列" scheme="https://mrswolf.github.io/categories/psychopy%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="psychopy" scheme="https://mrswolf.github.io/tags/psychopy/"/>
    
  </entry>
  
  <entry>
    <title>Psychopy坐标系统与显示器设置</title>
    <link href="https://mrswolf.github.io/psychopy-coordinate/"/>
    <id>https://mrswolf.github.io/psychopy-coordinate/</id>
    <published>2018-11-11T13:20:16.000Z</published>
    <updated>2022-06-04T06:49:00.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;h2 id=&quot;Psychopy的坐标系统&quot;&gt;Psychopy的坐标系统&lt;/h2&gt;
&lt;p&gt;Psychopy提供了5种不同的坐标单位(unit)，使用者只需提供刺激对应的坐标单位，Psychopy会自动计算刺激所对应的像素点范围。这种多坐标单位的好处在于，能够开发和设备无关的刺激呈现，不需要每次实验都对刺激的大小和呈现位置进行调整。其劣势则是需要精心挑选刺激对应的坐标单位，有时还要在不同单位间进行转换，一不小心就容易出错。</summary>
    
    
    
    <category term="psychopy系列" scheme="https://mrswolf.github.io/categories/psychopy%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="psychopy" scheme="https://mrswolf.github.io/tags/psychopy/"/>
    
  </entry>
  
  <entry>
    <title>博客测试</title>
    <link href="https://mrswolf.github.io/blog-test/"/>
    <id>https://mrswolf.github.io/blog-test/</id>
    <published>2018-11-09T13:03:15.000Z</published>
    <updated>2018-11-09T13:03:15.000Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;swolf的博客开通啦！本博客记录我在学习过程中的心得体会。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Psychopy安装和使用</title>
    <link href="https://mrswolf.github.io/psychopy-install/"/>
    <id>https://mrswolf.github.io/psychopy-install/</id>
    <published>2018-11-09T13:03:15.000Z</published>
    <updated>2022-06-04T06:49:00.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;h2 id=&quot;什么是Psychopy&quot;&gt;什么是Psychopy&lt;/h2&gt;
&lt;p&gt;Psychopy是基于Python的心理学实验设计软件，由英国诺丁汉大学的Jon Peirce主持开发。Psychopy结合了OpenGL的图形优势和Python的语法特性，给科学家们提供了快速构建高性能的图形刺激界面的工具。</summary>
    
    
    
    <category term="psychopy系列" scheme="https://mrswolf.github.io/categories/psychopy%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="psychopy" scheme="https://mrswolf.github.io/tags/psychopy/"/>
    
  </entry>
  
</feed>
