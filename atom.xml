<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>swolf的博客</title>
  
  <subtitle>记录我的学习生活</subtitle>
  <link href="https://mrswolf.github.io/atom.xml" rel="self"/>
  
  <link href="https://mrswolf.github.io/"/>
  <updated>2022-03-30T16:00:00.000Z</updated>
  <id>https://mrswolf.github.io/</id>
  
  <author>
    <name>swolf</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>矩阵微积分</title>
    <link href="https://mrswolf.github.io/matrix-calculus/"/>
    <id>https://mrswolf.github.io/matrix-calculus/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-30T16:00:00.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;p&gt;矩阵微分和矩阵求导几乎是求解优化问题不可避免的必学内容，这一方面的内容老实说我很难完全掌握。这里记录一下一些常用的矩阵微分求导的规范和技巧。</summary>
    
    
    
    <category term="机器学习" scheme="https://mrswolf.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="机器学习" scheme="https://mrswolf.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="矩阵分解" scheme="https://mrswolf.github.io/tags/%E7%9F%A9%E9%98%B5%E5%88%86%E8%A7%A3/"/>
    
    <category term="深度学习" scheme="https://mrswolf.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>主成分分析PCA</title>
    <link href="https://mrswolf.github.io/principle-component-analysis/"/>
    <id>https://mrswolf.github.io/principle-component-analysis/</id>
    <published>2019-12-10T16:00:00.000Z</published>
    <updated>2022-03-20T16:00:00.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;p&gt;主成分分析（Principle Component Analysis，PCA）是常用的一种矩阵分解算法，PCA通过旋转原始空间来使得数据在各个正交轴上的投影最大，通过选择前几个正交轴可以实现数据降维的目的。</summary>
    
    
    
    <category term="机器学习" scheme="https://mrswolf.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="机器学习" scheme="https://mrswolf.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="矩阵分解" scheme="https://mrswolf.github.io/tags/%E7%9F%A9%E9%98%B5%E5%88%86%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>manjaro踩坑记(2022更新版)</title>
    <link href="https://mrswolf.github.io/my-manjaro-log/"/>
    <id>https://mrswolf.github.io/my-manjaro-log/</id>
    <published>2019-05-23T16:00:00.000Z</published>
    <updated>2022-03-20T16:00:00.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;p&gt;从2019年到2022年，manjaro发行版渡过了我的整个博士生涯。最近毕业重新装了系统，依然选择了最新的&lt;a href=&quot;https://manjaro.org/downloads/official/kde/&quot;&gt;manjaro KDE Plasma 21.2.4&lt;/a&gt;（本来装了arch，大小问题不断被劝退了😜）。基本上这台linux主机要跟着我进入人生下一阶段，作为主力台式机也不打算再折腾了。安装过程中有一些新的学习体会（坑），在这里更新记录一下，希望能帮到有需要的朋友～</summary>
    
    
    
    <category term="linux" scheme="https://mrswolf.github.io/categories/linux/"/>
    
    
    <category term="manjaro" scheme="https://mrswolf.github.io/tags/manjaro/"/>
    
    <category term="linux" scheme="https://mrswolf.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>MATLAB分布式集群搭建记录</title>
    <link href="https://mrswolf.github.io/matlab-mdce-log/"/>
    <id>https://mrswolf.github.io/matlab-mdce-log/</id>
    <published>2019-05-19T16:00:00.000Z</published>
    <updated>2022-03-20T16:00:00.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;p&gt;&lt;strong&gt;本篇的内容可能过时啦&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;虽然我很久不用MATLAB处理日常工作，但是实验室主流依然是MATLAB（用Python的就那么几个T_T)。以前小伙伴们跑程序都是拷贝程序和数据到实验室的计算服务器上，手工开N个MATLAB窗口做运算。现在实验室规模扩大，这种手工的方式越来越繁琐。我从前用MATLAB时就想试试集群计算，奈何当时实验室没啥硬件条件，正好现在有机会，我干脆搭了个MATLAB集群供小伙伴使用。</summary>
    
    
    
    <category term="分布式计算" scheme="https://mrswolf.github.io/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="matlab" scheme="https://mrswolf.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>共空间模式CSP</title>
    <link href="https://mrswolf.github.io/common-spatial-pattern/"/>
    <id>https://mrswolf.github.io/common-spatial-pattern/</id>
    <published>2019-01-05T16:00:00.000Z</published>
    <updated>2022-03-23T16:00:00.000Z</updated>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;p&gt;共空间模式（common spatial pattern，CSP）是脑-机接口领域常用的一类空间滤波算法，尤其在运动想象范式分类上具有较好的效果，是运动想象范式的基准算法之一。</summary>
    
    
    
    <category term="脑-机接口" scheme="https://mrswolf.github.io/categories/%E8%84%91-%E6%9C%BA%E6%8E%A5%E5%8F%A3/"/>
    
    
    <category term="机器学习" scheme="https://mrswolf.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="矩阵分解" scheme="https://mrswolf.github.io/tags/%E7%9F%A9%E9%98%B5%E5%88%86%E8%A7%A3/"/>
    
    <category term="脑-机接口" scheme="https://mrswolf.github.io/tags/%E8%84%91-%E6%9C%BA%E6%8E%A5%E5%8F%A3/"/>
    
  </entry>
  
</feed>
